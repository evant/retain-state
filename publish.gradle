/*
 * Copyright (c) 2015 Evan Tatarka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

if (project.hasProperty('sonatype.username') || project.hasProperty('bintray.username')) {

    signing {
        sign configurations.archives
    }

    def siteUrl = 'https://github.com/evant/retain-state'
    def gitUrl = 'https://github.com/evantlemaddaluno/retain-state.git'

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { deployment -> signing.signPom(deployment) }

                def repoUrl
                if (project.version.endsWith("SNAPSHOT")) {
                    repoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                } else {
                    repoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                }

                repository(url: repoUrl) {
                    authentication(
                            userName: project.getProperty('sonatype.username'),
                            password: project.getProperty('sonatype.password'))
                }

                pom.project {
                    name project.name
                    packaging 'aar'
                    description 'A dead simple way to retain some state thought configuration changes on Android'
                    url siteUrl

                    scm {
                        url siteUrl
                        connection gitUrl
                        developerConnection gitUrl
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'evant'
                            name 'Evan Tatarka'
                        }
                    }
                }
            }
        }
    }

    if (project.hasProperty('bintray.username')) {
        bintray {
            user = project.property('bintray.username')
            key = project.property('bintray.apikey')
            configurations = ['archives']
            pkg {
                repo = 'maven'
                name = project.name
                websiteUrl = siteUrl
                vcsUrl = gitUrl
                licenses = ["Apache-2.0"]
                version {
                    gpg {
                        sign = true
                        passphrase = project.getProperty('signing.password')
                    }
                }
            }
        }
    }
}
